<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MedprWebAPI</name>
    </assembly>
    <members>
        <member name="T:MedprWebAPI.Controllers.AppController">
            <summary>
            Controller for users and errors
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.AppController.Error">
            <summary>
            Error handler
            </summary>
            <param name="errorModel">Model for message and status code</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.AppController.SignUp(MedprModels.Requests.UserModelRequest)">
            <summary>
            Register user in the app
            </summary>
            <param name="model">User credentials</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.AppController.SingIn(MedprModels.Requests.UserModelRequest)">
            <summary>
            Login user
            </summary>
            <param name="model">User credentials</param>
            <returns></returns>
        </member>
        <member name="T:MedprWebAPI.Controllers.AppointmentsController">
            <summary>
            Controller for appointments
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.AppointmentsController.Index">
            <summary>
            Get all appointments
            </summary>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.AppointmentsController.Details(System.Guid)">
            <summary>
            Find info on one particular resourse
            </summary>
            <param name="id">Id of the appointment</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.AppointmentsController.Create(MedprModels.Requests.AppointmentModelRequest)">
            <summary>
            Create new appointment for the app
            </summary>
            <param name="model">Model with appointment parameters</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.AppointmentsController.Edit(System.Guid,MedprModels.Requests.AppointmentModelRequest)">
            <summary>
            Edit some data about appointment
            </summary>
            <param name="id">URL check</param>
            <param name="model">Appointment parameters. Name should not change</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.AppointmentsController.Delete(System.Guid)">
            <summary>
            Remove appointment from app
            </summary>
            <param name="id">Appointment's id</param>
            <returns></returns>
        </member>
        <member name="T:MedprWebAPI.Controllers.DoctorsController">
            <summary>
            Controller for doctors
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.DoctorsController.Index">
            <summary>
            Get all doctors
            </summary>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.DoctorsController.Details(System.Guid)">
            <summary>
            Find info on one particular resourse
            </summary>
            <param name="id">Id of the doctor</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.DoctorsController.Create(MedprModels.Requests.DoctorModelRequest)">
            <summary>
            Create new doctor for the app. Forbids creation of doctor with existing in app name
            </summary>
            <param name="model">Model with doctor parameters</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.DoctorsController.Edit(MedprModels.Requests.DoctorModelRequest)">
            <summary>
            Edit some data about doctor. Forbids doctor's name change. Returns SC304 if there is nothing to patch.
            </summary>
            <param name="model">Doctor parameters. Name should not change</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.DoctorsController.Delete(System.Guid)">
            <summary>
            Remove doctor from app
            </summary>
            <param name="id">Doctor's id</param>
            <returns></returns>
        </member>
        <member name="T:MedprWebAPI.Controllers.DrugsController">
            <summary>
            Controller for drugs
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.DrugsController.Index">
            <summary>
            Get all drugs
            </summary>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.DrugsController.Details(System.Guid)">
            <summary>
            Find info on one particular resourse
            </summary>
            <param name="id">Id of the drug</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.DrugsController.Create(MedprModels.Requests.DrugModelRequest)">
            <summary>
            Create new drug for the app. Forbids creation of drug with existing in app name
            </summary>
            <param name="model">Model with drug parameters</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.DrugsController.Edit(MedprModels.Requests.DrugModelRequest)">
            <summary>
            Edit some data about drug. Forbids drug's name change. Returns SC304 if there is nothing to patch.
            </summary>
            <param name="model">Drug parameters. Name should not change</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.DrugsController.Delete(System.Guid)">
            <summary>
            Remove drug from app
            </summary>
            <param name="id">Drug's id</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.DrugsController.GetOpenFDA">
            <summary>
            Get random drug from openFDA API
            </summary>
            <returns></returns>
        </member>
        <member name="T:MedprWebAPI.Controllers.FamiliesController">
            <summary>
            Controller for families
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.FamiliesController.Index">
            <summary>
            Get list of families with creatorId and added to each family users
            </summary>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.FamiliesController.NameShard(System.String)">
            <summary>
            Find family by substring
            </summary>
            <param name="substring">Substring of the family</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.FamiliesController.Create(MedprModels.Requests.FamilyModelRequest)">
            <summary>
            Create new family for the app. Forbids creation of family with existing in app name
            </summary>
            <param name="model">Model with family parameters</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.FamiliesController.Delete(System.Guid)">
            <summary>
            Remove family from app
            </summary>
            <param name="id">Family's id</param>
            <returns></returns>
        </member>
        <member name="T:MedprWebAPI.Controllers.FeedController">
            <summary>
            Controller for users and errors
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.FeedController.Upcoming">
            <summary>
            Get upcoming events
            </summary>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.FeedController.Ongoing">
            <summary>
            Get upcoming events
            </summary>
            <returns></returns>
        </member>
        <member name="T:MedprWebAPI.Controllers.MembersController">
            <summary>
            Controller for members of families
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.MembersController.Create(MedprModels.Requests.FamilyMemberModelRequest)">
            <summary>
            Attach user to family
            </summary>
            <param name="model">Model with familyMember parameters</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.MembersController.MakeAdmin(MedprModels.Requests.FamilyMemberModelRequest)">
            <summary>
            Make member family
            </summary>
            <param name="model">Model of member</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.MembersController.Delete(System.Guid)">
            <summary>
            Detach member from family
            </summary>
            <param name="id">Family's id</param>
            <returns></returns>
        </member>
        <member name="T:MedprWebAPI.Controllers.PrescriptionsController">
            <summary>
            Controller for prescriptions
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.PrescriptionsController.Index">
            <summary>
            Get all prescriptions
            </summary>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.PrescriptionsController.Details(System.Guid)">
            <summary>
            Find info on one particular resourse
            </summary>
            <param name="id">Id of the prescription</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.PrescriptionsController.Create(MedprModels.Requests.PrescriptionModelRequest)">
            <summary>
            Create new prescription for the app
            </summary>
            <param name="model">Model with prescription parameters</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.PrescriptionsController.Edit(System.Guid,MedprModels.Requests.PrescriptionModelRequest)">
            <summary>
            Edit some data about prescription
            </summary>
            <param name="id">URL check</param>
            <param name="model">Prescription parameters. Name should not change</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.PrescriptionsController.Delete(System.Guid)">
            <summary>
            Remove prescription from app
            </summary>
            <param name="id">Prescription's id</param>
            <returns></returns>
        </member>
        <member name="T:MedprWebAPI.Controllers.UsersController">
            <summary>
            Controller for users
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.UsersController.Index">
            <summary>
            Get all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.UsersController.Details(System.Guid)">
            <summary>
            Find info on one particular resourse
            </summary>
            <param name="id">Id of the user</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.UsersController.Edit(MedprModels.Requests.UserModelRequest)">
            <summary>
            Edit some data about user. Forbids user's name change. Returns SC304 if there is nothing to patch.
            </summary>
            <param name="model">User parameters. Name should not change</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.UsersController.Delete(System.Guid)">
            <summary>
            Remove user from app
            </summary>
            <param name="id">User's id</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.UsersController.CheckAccess(System.Guid)">
            <summary>
            Returns true if current user has access to user's CRUD
            </summary>
            <param name="userId">Id of user to change</param>
            <returns></returns>
        </member>
        <member name="T:MedprWebAPI.Controllers.VaccinationsController">
            <summary>
            Controller for vaccinations
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.VaccinationsController.Index">
            <summary>
            Get all vaccinations
            </summary>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.VaccinationsController.Details(System.Guid)">
            <summary>
            Find info on one particular resourse
            </summary>
            <param name="id">Id of the vaccination</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.VaccinationsController.Create(MedprModels.Requests.VaccinationModelRequest)">
            <summary>
            Create new vaccination for the app
            </summary>
            <param name="model">Model with vaccination parameters</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.VaccinationsController.Edit(System.Guid,MedprModels.Requests.VaccinationModelRequest)">
            <summary>
            Edit some data about vaccination
            </summary>
            <param name="id">URL check</param>
            <param name="model">Vaccination parameters. Name should not change</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.VaccinationsController.Delete(System.Guid)">
            <summary>
            Remove vaccination from app
            </summary>
            <param name="id">Vaccination's id</param>
            <returns></returns>
        </member>
        <member name="T:MedprWebAPI.Controllers.VaccinesController">
            <summary>
            Controller for vaccines
            </summary>
        </member>
        <member name="M:MedprWebAPI.Controllers.VaccinesController.Index">
            <summary>
            Get all vaccines
            </summary>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.VaccinesController.Details(System.Guid)">
            <summary>
            Find info on one particular resourse
            </summary>
            <param name="id">Id of the vaccine</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.VaccinesController.Create(MedprModels.Requests.VaccineModelRequest)">
            <summary>
            Create new vaccine for the app. Forbids creation of vaccine with existing in app name
            </summary>
            <param name="model">Model with vaccine parameters</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.VaccinesController.Edit(MedprModels.Requests.VaccineModelRequest)">
            <summary>
            Edit some data about vaccine. Forbids vaccine's name change. Returns SC304 if there is nothing to patch.
            </summary>
            <param name="model">Vaccine parameters. Name should not change</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Controllers.VaccinesController.Delete(System.Guid)">
            <summary>
            Remove vaccine from app
            </summary>
            <param name="id">Vaccine's id</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Utils.Notifications.NotificationService.SendNotification(System.String,System.String,System.String,System.Guid)">
            <summary>
            This method created and sends notification to Angular client
            </summary>
            <param name="message">Message to send in notification</param>
            <param name="type">Entity type</param>
            <param name="eventId">Id of entity</param>
            <returns></returns>
        </member>
        <member name="M:MedprWebAPI.Utils.UserNotification.NotifyUser``1(``0,MedprCore.Abstractions.INotificationService)">
            <summary>
            Plug method for future SignalR functionality
            </summary>
            <typeparam name="T">Model with date, user info and notification id</typeparam>
            <param name="dto">Object to form notification</param>
            <param name="notificationService">SignalR service</param>
            <param name="model">Model</param>
        </member>
        <member name="T:MedprWebAPI.Utils.WardedPeople">
            <summary>
            Class to check what info user is allowed to see
            </summary>
        </member>
        <member name="M:MedprWebAPI.Utils.WardedPeople.GetWardedByUserPeople(System.Guid)">
            <summary>
            Method returns list of user IDs whose information user is allowed to see
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
    </members>
</doc>
